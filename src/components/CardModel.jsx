/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/CardModel.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import gsap from 'gsap'
import { useGSAP } from '@gsap/react'

import { useEffect, useRef } from 'react'
import { useAnimations, useFBX } from '@react-three/drei'


export function CardModel({text , ...props }) {
  const group = useRef();

  // useGSAP(() => {
  //   gsap.from(group.current.rotation, {
  //     y: Math.PI / 2,
  //     duration: 1,
  //     ease: 'power3.Inout',
  //   });
  // }, [text]);
 
    const {animations : anim} = useFBX(`/models/${text}.fbx`);
    anim[0].name = text ;
    const {actions} = useAnimations(anim , group);
    
    useEffect(() => {
      if (actions[text]) {
        actions[text].reset().fadeIn(0.8).play();
      }
  
      return () => {
        if (actions[text]) {
          actions[text].fadeOut(0.5);
        }
      };
    }, [text, actions]);
  
  
  // const {animations : JumpingAnimation} = useFBX('/models/JumpingJack.fbx');
  // const {animations : PushUpAnimation} = useFBX('/models/PushUps.fbx');
  // const {animations : PunchAnimation} = useFBX('/models/Punch.fbx');

      // console.log(KickAnimation);
      // JumpingAnimation[0].name = 'Jumping';
      // PunchAnimation[0].name = 'Punch';
      // PushUpAnimation[0].name = 'PushUp';
      // const {actions} = useAnimations(JumpingAnimation, group);
  
  
      // useEffect(()=>{
      //   actions["Jumping"].reset().fadeIn(0.8).play();
      // } , [])


  const { scene } = useGLTF('/models/CardModel.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  return (
    <group ref={group} {...props} dispose={null} >
      <primitive object={nodes.Hips} />
      <skinnedMesh geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair} skeleton={nodes.Wolf3D_Hair.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
      <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
      <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />
    </group>
  )
}

useGLTF.preload('/models/CardModel.glb')
